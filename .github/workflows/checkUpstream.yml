#######################################################
# Check dockerhub for updates to the tomcat container #
#######################################################
# THIS SECRET MUST BE SET
# secrets.gh_pat :
#   When github actions pushes to a branch, in this case
#   the "MAJOR_VERSION" branch, using the default
#   GITHUB_TOKEN variable, the push does not trigger
#   other github actions workflows.
#   Using a Personal Access Token allows pushes to a
#   repo to trigger workflows that are dispatched by the
#   "push" event
#######################################################

name: Check For Upstream Updates

on:
  schedule:
    # Every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  checkUpstreamTag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ramadda-docker
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: robertej09/ramadda-docker
          token: ${{ secrets.gh_pat }}

      - name: Set environment vars
        run: |
          scriptsdir=$(pwd)/.github/helperScripts
          echo "scriptsdir=${scriptsdir}" >> $GITHUB_ENV

      - name: Get latest RAMADDA tag
        run: |
          RAMADDA="https://github.com/geodesystems/ramadda"
          UPSTREAM_TAG=$(git ls-remote --tags --sort="-v:refname" $RAMADDA | grep -o -E -e "[0-9]*\.[0-9]*\.[0-9]*$" | head -n 1)
          echo "UPSTREAM_TAG=$UPSTREAM_TAG" >> $GITHUB_ENV

      - name: Compare with ramadda-docker
        run: |
          UNIDATA_TAG=$(git tag --list | sort -Vr | head -n 1)
          [[ "$UNIDATA_TAG" == "${{ env.UPSTREAM_TAG }}" ]] && up2date="true" || up2date="false"
          echo "up2date=$up2date" >> $GITHUB_ENV
          echo "UNIDATA_TAG=$UNIDATA_TAG" >> $GITHUB_ENV

      - name: Checkout ramadda-docker branch
        if: ${{ env.up2date == 'false' }}
        # Checkout remote MAJOR_VERSION branch if it exists
        # Create MAJOR_VERSION branch if it doesn't already exist in remote
        run: |
          MAJOR_VERSION=$(echo ${{ env.UPSTREAM_TAG }} | cut -d "." -f 1)
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_ENV
          if git branch -r | grep "origin/$MAJOR_VERSION;
          then git checkout -b $MAJOR_VERSION origin/$MAJOR_VERSION;
          else git checkout -b $MAJOR_VERSION latest;
          fi

      - name: Update RAMADDA version in Dockerfile
        if: ${{ env.up2date == 'false' }}
        run: |
          sed -i -e "s|ENV RAMADDA_VERSION.*|ENV RAMADDA_VERSION ${{ env.UPSTREAM_TAG }}|g" Dockerfile

      - name: Update docs
        if: ${{ env.up2date == 'false' }}
        run: |
          ${{ env.scriptsdir }}/update_docs.sh \
          --major-version ${{ env.MAJOR_VERSION }} \
          --full-version ${{ env.UPSTREAM_TAG }} \
          --image ${{ secrets.imagename }}

      - name: Push to MAJOR_VERSION branch
        if: ${{ env.up2date == 'false' }}
        run: |
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
          git add . && git commit -m "Update to RAMADDA ${{ env.UPSTREAM_TAG }}" && \
          git tag ${{ env.UPSTREAM_TAG }} && \
          git push origin ${{ env.MAJOR_VERSION }} && \
          git push --tag

      - name: Submit PR to latest branch
        if: ${{ env.up2date == 'false' }}
        run: |
          gh pr create --title "Update to RAMADDA ${{ env.UPSTREAM_TAG }}" --body "PR created by GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
