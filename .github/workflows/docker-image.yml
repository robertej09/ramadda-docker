################################################
# NECESSARY GITHUB SECRETS TO SET              #
################################################
# secrets.imagename : e.g "<org>/<image>"
# secrets.registryuser
# secrets.registrypwd
# secrets.server : (not currently implemented)
################################################

name: Docker Image CI

# Activate workflow when a branch is pushed to
# Ignore when tags are pushed
on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
  workflow_dispatch:
  pull_request_target:
    types: [ opened, reopened, edited, synchronize, closed]
  
jobs:

  buildAndTest:
    runs-on: ubuntu-latest
    steps:

    - name: Set environment variables
      # Create docker tag name based on branch name (major version)
      run: |
        tag=${{ github.ref }} && tag=${tag##*/}
        echo "tag=${tag}" >> $GITHUB_ENV

    # Checkout the commit that triggered the workflow
    - uses: actions/checkout@v2

    - name: Build the Docker image
      run: docker build --no-cache -t ${{ secrets.imagename }}:${{ env.tag }} .


    - name: Run the container
      run: |
        docker run \
        -v $(pwd)/.github/testScripts:/testScripts \
        -d \
        -p 8080:8080 \
        ${{ secrets.imagename }}:${{ env.tag }}

    - name: Run test script
      run: ./.github/testScripts/test.sh

    - name: Push to Dockerhub
      if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
      run: |
        echo "Event that triggered workflow: ${{ github.event_name }}"
        docker logout
        echo ${{ secrets.registrypwd }} | docker login -u ${{ secrets.registryuser }} --password-stdin
        docker push ${{ secrets.imagename }}:${{ env.tag }} &&
        { echo "Successfully pushed ${{ secrets.imagename }}:${{ env.tag }}"; } ||
        { echo "Docker push failed" && exit 1; }

    - name: Push to alternate Dockerhub tag
      if: ${{ env.tag != 'latest' && github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
      run: |
        docker logout
        echo ${{ secrets.registrypwd }} | docker login -u ${{ secrets.registryuser }} --password-stdin
        VERSION=$(grep -e "ENV RAMADDA_VERSION" Dockerfile | awk '{print $3}')
        docker tag ${{ secrets.imagename }}:${{ env.tag }} ${{ secrets.imagename }}:${VERSION} &&
        docker push ${{ secrets.imagename }}:${VERSION} &&
        { echo "Successfully pushed ${{ secrets.imagename }}:${VERSION}"; } ||
        { echo "Docker push failed" && exit 1; }
